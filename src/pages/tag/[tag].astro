---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from 'astro:content';
import {slugify} from "../../tools/utils";

const {tag} = Astro.params

export async function getStaticPaths(){
  const allPosts = await getCollection("blog");
  
  let tagList: string | any[] = [];
  allPosts.forEach(post => {
    post.data.tags?.forEach(tag => {
        if(!tagList.find(tagToFind => tagToFind === tag)){
            tagList.push(tag)
        }
    })
  });

  let paramList: any[] = []
  tagList.forEach(tag => {
    paramList.push(
      {
        params: {tag: slugify(tag)},
        props: {tag: slugify(tag), posts: allPosts}
      }
    )
  })

  return paramList;
}


const {posts} = Astro.props

let filteredPosts = posts.filter((post: { data: { tags: any[]; }; }) => {
  let postTagSlugs = post.data?.tags?.map( (str: any) => slugify(str))
  return postTagSlugs?.includes(slugify(tag))
})
---
<Layout>
    <ul>
        <h2>{tag}</h2>
        {
            filteredPosts.map((post: { id: string; data: { title: unknown; }; })=>(
                <li><a href={"/blog/" + post.id}>{post.data.title}</a></li>
            ))
        }
    </ul>
</Layout>